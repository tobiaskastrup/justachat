##########################################################
##########################################################
#
#                 GRUPPE 5's final script
#
#              Emil Cramer, Mathilde Elkjær, 
#        Christian Ruhwedell & Tobias Jul Kastrup
#
##########################################################
#///////////////////// INSTRUKTIONER ////////////////////#
##########################################################
#
#   Udskift vaultrandomIdentifier før hver gennemkørsel
#   
#    >> OBS!!! SKAL KØRES FRA AZURE CLOUD SHELL <<
#
####################### VARIABLER ########################

location=northeurope
randomIdentifier=justachat

# Generer et random nummer til vores vaults da de er globalt unikke
let randomNum=$RANDOM*$RANDOM

sshvaultname="ssh-jac$randomNum"
vmvaultname="vm-jac$randomNum"

resource="resource-$randomIdentifier"

login="rockadmin"
password="Mahman12345!"


##########################################################
############## Opret en resource group ###################
##########################################################

echo "Creating $resource..."
az group create \
--name $resource \
--location "$location" \
--output table

##########################################################
################## Opretter 2 offentlige IPs #############
##########################################################

# Opretter en public IP addresse til webserveren
az network public-ip create \
    --resource-group $resource \
    --name myPublicIP \
    --sku Standard

# Gemmer vores IP til besked i slutningen af scriptet
publicIP=$(az network public-ip show -g $resource -n myPublicIP --query 'ipAddress' -o tsv) 

echo "
###########################################################
##
##                Public IP er $publicIP
##              skift dine DNS indstillinger
##
###########################################################
"

# Opretter en public IP address til Bastion
az network public-ip create \
    --resource-group $resource \
    --name myBastionIP \
    --sku Standard

##########################################################
################## Opret NSG og ASG'er ###################
##########################################################

# Opret en network security group
az network nsg create \
    --resource-group $resource \
    --name myNSG 

az network asg create --name webASG \
    --resource-group $resource

az network asg create --name dbASG \
    --resource-group $resource

az network asg create --name appASG \
    --resource-group $resource


##########################################################
############## Opretter et virtual network ###############
################## med DDOS beskyttelse ##################
##########################################################
#
#   Opretter Vnet:      myVNet      10.1.0.0/16
#
#   Subnet:     webSubnet     		10.1.0.0/24
#               rocketBackEndSubnet 10.1.1.0/24
#               dbBackEndSubnet     10.1.2.0/24
#				AzureBastionSubnet  10.1.3.0/24
#   
#    VMs:        webVM		        10.1.0.5
#                RockVM		        10.1.1.6
#                dbVM		        10.1.2.7
#
##########################################################

# Opretter vores vnet med subnet til web VM
az network vnet create \
    --resource-group $resource \
    --location $location \
    --name myVNet \
    --address-prefixes 10.1.0.0/16 \

az network vnet subnet create \
    --resource-group $resource \
    --name webSubnet \
    --vnet-name myVNet \
    --address-prefixes 10.1.0.0/24 \
    --network-security-group myNSG

# Opretter et subnet til Rocket.chat serveren
az network vnet subnet create \
    --resource-group $resource \
    --name rocketBackEndSubnet \
    --vnet-name myVNet \
    --address-prefixes 10.1.1.0/24 \
    --network-security-group myNSG
	
# Opretter vores DB subnet 
az network vnet subnet create \
    --resource-group $resource \
    --name dbBackEndSubnet \
    --vnet-name myVNet \
    --address-prefixes 10.1.2.0/24 \
    --network-security-group myNSG
	
# Opretter et bastion subnet
az network vnet subnet create \
    --resource-group $resource \
    --name AzureBastionSubnet \
    --vnet-name myVNet \
    --address-prefixes 10.1.3.0/24

# Opretter et firewall subnet
az network vnet subnet create \
    --resource-group $resource \
    --name AzureFirewallSubnet \
    --vnet-name myVNet \
    --address-prefixes 10.1.4.0/24

##########################################################
###################### Keyvault ##########################
##########################################################
#
# Opretter en keyvault til SSH keys
# og derefter til disk encryption
#
##########################################################

rm -rf ~/.ssh/justachat*

# Generer et password til at bruge med SSH keys
tempkey=$(openssl rand -base64 20)

# Generer SSH Keys til Linux VMs
ssh-keygen \
-t rsa \
-b 4096 \
-C "justachat" \
-f ~/.ssh/justachat \
-N "$tempkey"

# Opretter en keyvault til SSH keys og gemmer vores secret der i
az keyvault create \
    --location $location \
    --name "$sshvaultname" \
    --resource-group $resource

# Gemmer en secret i keyvault'en med vores SSH public key
az keyvault secret set \
--name "justachat-pub" \
--vault-name "$sshvaultname" \
--value "$(cat ~/.ssh/justachat.pub)" \
--output none

# Gemmer en secret i keyvault'en med vores SSH private key
az keyvault secret set \
--name "justachat-private" \
--vault-name "$sshvaultname" \
--value "$(cat ~/.ssh/justachat)" \
--output none

# Gemmer en secret i keyvault'en med vores SSH key password
az keyvault secret set \
--name "justachat-password" \
--vault-name "$sshvaultname" \
--value "$tempkey" \
--output none

# Laver en keyvault til vores disk encryption keys
az keyvault create \
    --location $location \
    --name "$vmvaultname" \
    --resource-group $resource \
    --enabled-for-disk-encryption

##########################################################
##################### WEBSERVER VM #######################
##########################################################
#
# Opretter 1 server til vores nginx proxy server,
# flask application som kører på en gunicorn server
# med IP-adressen 10.1.0.5
#
##########################################################

az vm create \
    --resource-group $resource \
    --name webVM \
    --image Canonical:0001-com-ubuntu-server-focal:20_04-lts:latest \
	--size "Standard_DS2_v2" \
    --ssh-key-values "$(cat ~/.ssh/justachat.pub)" \
    --admin-username $login \
    --admin-password $password \
    --nsg myNSG \
    --asgs webASG \
    --vnet-name myVNet \
    --subnet webSubnet \
    --private-ip-address 10.1.0.5 \
    --public-ip-address "" \
    --nsg-rule NONE \
    --no-wait

az vm create \
    --resource-group "resource-justachat" \
    --name webVM \
    --image Canonical:0001-com-ubuntu-server-focal:20_04-lts:latest \
	--size "Standard_DS2_v2" \
    --admin-username $login \
    --admin-password $password \
    --nsg myNSG \
    --asgs webASG \
    --vnet-name myVNet \
    --subnet webSubnet \
    --private-ip-address 10.1.0.5 \
    --public-ip-address "" \
    --nsg-rule NONE


##########################################################
##################### ROCKETCHAT VM ######################
##########################################################
#
# Opretter 1 server til rocket.chat application
# som kører på nodejs med IP-adressen 10.1.1.6
#
##########################################################

# Opret virtual maskiner til rocketchat
az vm create \
    --resource-group $resource \
    --name rockVM \
    --image Canonical:0001-com-ubuntu-server-focal:20_04-lts:latest \
    --size "Standard_DS1_v2" \
    --ssh-key-values "$(cat ~/.ssh/justachat.pub)" \
    --admin-username $login \
    --admin-password $password \
    --nsg myNSG \
    --asgs appASG \
    --vnet-name myVNet \
    --subnet rocketBackEndSubnet \
    --private-ip-address 10.1.1.6 \
    --public-ip-address "" \
    --nsg-rule NONE \
    --no-wait
	
##########################################################
######################## Database ########################
##########################################################
#
#   Opretter 1 server til mongodb med IP-adressen 10.1.2.7
#
##########################################################

# Opret virtual maskiner til mongodb
az vm create \
    --resource-group $resource \
    --name dbVM \
    --image Canonical:0001-com-ubuntu-server-focal:20_04-lts:latest \
    --size "Standard_DS1_v2" \
    --ssh-key-values "$(cat ~/.ssh/justachat.pub)" \
    --admin-username $login \
    --admin-password $password \
    --nsg myNSG \
    --asgs dbASG \
    --vnet-name myVNet \
    --subnet dbBackEndSubnet \
    --private-ip-address 10.1.2.7 \
    --public-ip-address "" \
    --nsg-rule NONE \
    --no-wait

##########################################################
####################### BASTION ##########################
##########################################################

# Opret bastion host
az network bastion create \
    --resource-group $resource \
    --name myBastionHost \
    --public-ip-address myBastionIP \
    --vnet-name myVNet \
    --location $location \
    --scale-units 2 # Fixer en fejl i cli'en så man ikke kan lave bastian igennem cli pt


##########################################################
####################### FIREWALL #########################
##########################################################
#
#
##########################################################

az extension add --upgrade -n azure-firewall

az network firewall create  --name FW-JUSTACHAT \
                            --resource-group $resource \
                            --location $location \
                            --sku  AZFW_VNet \
                            --tier "Standard" \
                            --threat-intel-mode Deny
                        
az network firewall ip-config create --name FW-ipconfig \
                                     --firewall-name "FW-JUSTACHAT" \
                                     --public-ip-address "myPublicIP" \
                                     --resource-group $resource \
                                     --vnet-name myVNet
                
az network firewall update -n "FW-JUSTACHAT" \
                           -g $resource

firewallIP=$(az network firewall ip-config show --firewall-nam FW-JUSTACHAT \
    --name FW-ipconfig \
    --resource-group $resource \
    --query 'privateIpAddress' -o tsv)
    
az network route-table create   --name myRouteTable \
                                --resource-group $resource

az network route-table route create --address-prefix 0.0.0.0/0 \
                                    --name default-web-route \
                                    --next-hop-type VirtualAppliance \
                                    --resource-group $resource \
                                    --route-table-name myRouteTable \
                                    --next-hop-ip-address $firewallIP

az network firewall nat-rule create -c 'httpNATRules' \
                                    --destination-addresses $publicIP \
                                    --destination-ports '80' \
                                    --firewall-name FW-JUSTACHAT \
                                    --name 'http' \
                                    --protocols 'TCP' \
                                    --resource-group $resource \
                                    --source-addresses '*' \
                                    --translated-address '10.1.0.5' \
                                    --translated-port '80' \
                                    --action Dnat \
                                    --priority 100

az network firewall nat-rule create -c 'httpsNATRules' \
                                    --destination-addresses $publicIP \
                                    --destination-ports '443' \
                                    --firewall-name FW-JUSTACHAT \
                                    --name 'https' \
                                    --protocols 'TCP' \
                                    --resource-group $resource \
                                    --source-addresses '*' \
                                    --translated-address '10.1.0.5' \
                                    --translated-port '443' \
                                    --action Dnat \
                                    --priority 120


az network firewall network-rule create -c 'outboundRules' \
                                    --destination-addresses '*' \
                                    --destination-ports '*' \
                                    --firewall-name FW-JUSTACHAT \
                                    --name 'AllowAllOutTrafic' \
                                    --protocols 'Any' \
                                    --resource-group $resource \
                                    --source-addresses '10.1.0.5' \
                                    --priority 101 \
                                    --action 'Allow'

az network vnet subnet update \
    --resource-group $resource \
    --name webSubnet \
    --vnet-name myVNet \
    --address-prefixes 10.1.0.0/24 \
    --network-security-group myNSG \
    --route-table myRouteTable

##########################################################
#################### Opret NSG regler ####################
##########################################################

# Opret network security group (NSG) regel til HTTP trafik til webserveren
az network nsg rule create \
    --resource-group $resource \
    --nsg-name myNSG \
    --name myNSGRuleHTTP \
    --protocol 'TCP' \
    --direction inbound \
    --source-address-prefix $firewallIP \
    --source-port-range '*' \
    --destination-asgs 'webASG' \
    --destination-port-range 80 \
    --access allow \
    --priority 200

# Opret NSG regel til HTTPS trafik til webserveren
az network nsg rule create \
    --resource-group $resource \
    --nsg-name myNSG \
    --name myNSGRuleHTTPS \
    --protocol 'TCP' \
    --direction inbound \
    --source-address-prefix $firewallIP \
    --source-port-range '*' \
    --destination-asgs 'webASG' \
    --destination-port-range 443 \
    --access allow \
    --priority 250

# Opret NSG regel til trafik fra webserveren til rocketchatserveren (over port 3000)
# (i mellem de virtuelle subnets)
az network nsg rule create \
	--resource-group $resource \
	--nsg-name myNSG \
	--name myNSGRuleRocket \
	--protocol 'TCP' \
	--direction inbound \
	--source-asgs 'webASG' \
	--source-port-range '*' \
	--destination-asgs 'appASG' \
	--destination-port-range 3000 \
	--access allow \
	--priority 300

# Opret NSG regel til trafik fra rocketchatserveren til mongodb serveren (over port 27017)
# (i mellem de virtuelle subnets)
az network nsg rule create \
	--resource-group $resource \
	--nsg-name myNSG \
	--name myNSGRuleDB \
	--protocol 'TCP' \
	--direction inbound \
	--source-asgs 'appASG' \
	--source-port-range '*' \
	--destination-asgs 'dbASG' \
	--destination-port-range 27017 \
	--access allow \
	--priority 350

az network nsg rule create \
	--resource-group $resource \
	--nsg-name myNSG \
	--name myNSGRuleBastion \
	--protocol 'TCP' \
	--direction inbound \
	--source-address-prefixes 10.1.3.0/24 \
	--source-port-range '*' \
	--destination-asgs webASG appASG dbASG \
	--destination-port-range 22 \
	--access allow \
	--priority 400

# Opret network security group (NSG) regel til at afvise alt andet trafik end ovenstående regler
az network nsg rule create \
    --resource-group $resource \
    --nsg-name myNSG \
    --name DenyAllIn \
    --protocol '*' \
    --direction inbound \
    --source-address-prefix '*' \
    --source-port-range '*' \
    --destination-address-prefix '*' \
    --destination-port-range '*' \
    --access deny \
    --priority 4000

# Venter på at alle VMs er oprettet med en vm wait
az vm wait -g $resource -n webVM --created
az vm wait -g $resource -n rockVM --created
az vm wait -g $resource -n dbVM --created

##########################################################
################ Krypter VM diskstorage ##################
##########################################################
#
#   Kryptere vores 3 VMs med en encryption nøgle 
#   som gemmes i den keyvault vi lavede tidligere
#
#           OBS KRÆVER 8 GB RAM PER VM
#
##########################################################

# Udkommenteret rock og db VM da Azure Trial kun tillader 4 vCPUs i alt nu, hvilket kun tillader
# 1 VM, som har nok RAM, til at kryptere disken
az vm encryption enable -g $resource --name webVM --disk-encryption-keyvault "$vmvaultname"
# az vm encryption enable -g $resource --name rockVM --disk-encryption-keyvault "$vmvaultname"
# az vm encryption enable -g $resource --name dbVM --disk-encryption-keyvault "$vmvaultname"

# Fjerner ssh nøglerne fra vores cli storage account i azure
rm -rf ~/.ssh/justachat*

##########################################################
################## VM scripts kørsel ####################
##########################################################
#
# Med vm run-command kan vi kører shell scripts den at
# ssh til maskinen først (hvilket vi ikke kan fra azure cli,
# kun igennem en bastion forbindelse fra Azure Portalen)
# Vi laver først en curl -o (som gemmer filen som det
# efterfølgende filnavn, da der ellers kommer ?token=A*
# med i navnent)
# Så ændrer vi den til at kunne eksekveres med chmod a+x
# og så kører vi scriptet med ./>scriptnavn<.sh
#
##########################################################

# Script kørsel på MongoDB server
az vm run-command invoke -g $resource -n dbVM --command-id RunShellScript --scripts "\
curl -o mongoserver.sh https://raw.githubusercontent.com/tobiaskastrup/justachat/main/deploy/mongoserver.sh &&\
chmod a+x mongoserver.sh &&\
./mongoserver.sh"

# Script kørsel på Rocketchat server
az vm run-command invoke -g $resource -n rockVM --command-id RunShellScript --scripts "\
curl -o rocketchatserver.sh https://raw.githubusercontent.com/tobiaskastrup/justachat/main/deploy/rocketchatserver.sh &&\
chmod a+x rocketchatserver.sh  &&\
./rocketchatserver.sh"

## Script kørsel på webserver
az vm run-command invoke -g $resource -n webVM --command-id RunShellScript --scripts "\
curl -o webserver.sh https://raw.githubusercontent.com/tobiaskastrup/justachat/main/deploy/webserver.sh && \
chmod a+x webserver.sh && \
./webserver.sh"

# Restarter nginx service igen, for at fixe dependencies måske ikke er helt klar endnu
az vm run-command invoke -g $resource -n webVM --command-id RunShellScript --scripts "systemctl restart nginx"
# Restarter mongo service igen, for at fixe dependencies måske ikke er helt klar endnu
az vm run-command invoke -g $resource -n rockVM --command-id RunShellScript --scripts "systemctl restart rocketchat"


#####################################################
# AFSLUTTENDE BESKED EFTER FÆRDIG KØRSEL AF SCRIPT  #
#####################################################
echo "





#####################################################
            JUSTA.CHAT er blevet deployed!

Din offentlige IP til webserveren er:  $publicIP
Du kan tilgå serverne via Bastian med ssh-key i
keyvault'en.
Du skal logge ind med brugeren:         $login

Setup rocketchat på:    http://admin.justa.chat/
        Admin user:     rockadmin
        Admin pass:     Mahman

                Husk at opdatere DNS
#####################################################





"